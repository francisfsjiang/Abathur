name: ubuntu-llvm
on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.os }}-libjstack-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            triplet: x64-linux
            generator: Unix Makefiles

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Start Pg
        shell: bash
        run: sudo systemctl start postgresql.service

      - name: Test Pg
        shell: bash
        run: sudo -u postgres psql -d postgres -c "SELECT 1"

      - name: Create Build Environment
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Install dependencies
        shell: bash
        run: sudo apt-get install python3-pip libboost-filesystem-dev libboost-system-dev libboost-test-dev libssl-dev libpq-dev libpqtypes-dev postgresql-server-dev-all libcurl4-openssl-dev llvm

      - name: Configure CMake
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: cmake -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_C_COMPILER="/usr/bin/gcc-10" -DCMAKE_CXX_COMPILER="/usr/bin/g++-10" ${{ github.workspace }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Add Pg test user
        shell: bash
        run: sudo -u postgres psql -d postgres -c "CREATE USER libjstack WITH PASSWORD 'libjstack'"

      - name: Add Pg test database
        shell: bash
        run: sudo -u postgres psql -d postgres -c "CREATE DATABASE libjstack_test OWNER libjstack"

      - name: Test
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: ctest -C $BUILD_TYPE -V

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage1.xml,./coverage2.xml # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)