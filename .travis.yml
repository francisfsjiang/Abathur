#matrix:
#  include:
#    - os: osx
#      osx_image: xcode9.2
#
#    - os: linux
#      dist: trusty
#      compiler: clang
#
#    - os: linux
#      dist: trusty
#      compiler: gcc
#
#before_install:
#    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
#    - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
#
##    - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
#    #- if [ "$CXX" == "clang++" -a "$CPP14" == "0" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
#
##    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update && brew bundle   ; fi
#
#    - |
#        if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
#          CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
#          mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
#          export PATH=${DEPS_DIR}/cmake/bin:${PATH}
#
#          if [[ "${BOOST_VERSION}" != "" ]]; then
#             BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
#             BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
#             mkdir -p ${BOOST_DIR}
#             { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
#             # Make sure we don't conflict with the Hana shipped with Boost
#             CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"
#          fi
#
#        else
#           brew upgrade cmake
#           brew install cmake
#        fi
#    - cmake --version
#install:
#    # g++ 4.9
##    - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.9; fi
##    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9"; fi
#
#    ## clang 3.5
#    #- if [ "$CXX" == "clang++" ]; then sudo apt-get install clang-3.5; fi
#    #- if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.5"; fi
#
#before_script:
#    - mkdir build
#    - cd build
#    - cmake ..
#
#script:
#    - make
#
#notifications:
#    email:
#    - neveralso@qq.com
#


# Copyright Louis Dionne 2013-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)


#env:
#  global:
#    # GitHub token for pushing the documentation, logging in with the
#    # Travis command line utility and so on. The token is stored in the
#    # ${GITHUB_TOKEN} environment variable.
##    - secure: "gB1wvjk565j3O4UBGjyN44Vd8IGqcNHzkbvRdFNHp7C+C+JG2vhAeLlpiK0Zd483gdTjq9gPjIDwpwyG2UJ+yjT1kMTJvD1YNWpGcK6vOHYl1yMOwv/LBdnKn+J7i/FnoeULGRCCI2Fpp1qILhxeZgLxTxsdQaYXlAkkR0i8cgQ="
#
#  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
#  matrix:
#    - TRAVIS_EMPTY_JOB_WORKAROUND=true

language: c++

sudo: true

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.66.0

addons:
  apt:
    packages:
      - cmake
      - cmake-data


matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:
    ##########################################################################
    # Check for code formatting errors
    ##########################################################################
#    - os: osx
#      compiler: clang
#      osx_image: xcode9.2
#      env:
#        - CC=clang
#        - CXX=clang++
#        - C_COMPILER=clang
#        - CXX_COMPILER=clang++

    ##########################################################################
    # Build with the main configuration on all the supported compilers
    #
    # Note that we only use the memory checker on the main configuration to
    # speed up Travis builds.
    ##########################################################################

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - CC=gcc-7
        - CXX=g++-7
        - C_COMPILER=gcc-7
        - CXX_COMPILER=g++-7

    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - CC=clang-3.9
        - CXX=clang++-3.9
        - C_COMPILER=clang-3.9
        - CXX_COMPILER=clang++-3.9

    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - CC=clang-4.0
        - CXX=clang++-4.0
        - C_COMPILER=clang-4.0
        - CXX_COMPILER=clang++-4.0

    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - CC=clang-5.0
        - CXX=clang++-5.0
        - C_COMPILER=clang-5.0
        - CXX_COMPILER=clang++-5.0

before_install:
    - eval "${MATRIX_EVAL}";

install:

  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps";
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR};



  ############################################################################
  # Setup default versions and override compiler if needed
  ############################################################################
  - if [[ "${LLVM_VERSION}" == "default" ]]; then LLVM_VERSION=3.9.0; fi
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.66.0; fi

  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  - if [[ "${COMPILER}" == "gcc" ]]; then echo ${COMPILER}; fi

  - if [[ "${COMPILER}" == "clang" ]]; then
      echo ${COMPILER};
      CXX_FLAGS=-stdlib=libc++;
    fi

  - CMAKE_OPTIONS+=" -DCMAKE_CXX_COMPILER=${CXX_COMPILER}"
  - CMAKE_OPTIONS+=" -DCMAKE_C_COMPILER=${C_COMPILER}"
  - CMAKE_OPTIONS+=" -DCMAKE_CXX_FLAGS=\"${CXX_FLAGS}\""
  ############################################################################
  # Install Boost headers
  ############################################################################
  - |
    if [[ "${BOOST_VERSION}" != "" ]]; then
      BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION};
      BOOST_ROOT=${BOOST_DIR}/build;
      if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
        BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz";
        mkdir -p ${BOOST_DIR};
        mkdir -p ${BOOST_ROOT};
        { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1;
        cd ${BOOST_DIR}/tools/build;
        ./bootstrap.sh --prefix=${BOOST_ROOT};
        ./b2 install;
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_ROOT}";
    fi


before_script:
  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR};
  - echo ${CMAKE_OPTIONS};
  - (mkdir build && cd build && cmake ${CMAKE_OPTIONS} ..);


script:
  - ls;
  - pwd;
  - cd ${TRAVIS_BUILD_DIR}/build;
  - make;

notifications:
  webhooks:
    urls: https://webhooks.gitter.im/e/6aaa707cc6dba45aae8d
    on_success: change
    on_failure: always
